<h5>
import socket
import random
import json

a = random.randint(2, 10)

def gcd(a, b):
    if(b==0):
        return a
    return gcd(b,a%b)

def encrypt(msg, q, h, g):
    en_msg = []

    k = random.randint(1, q)
    while gcd(q, k) != 1:
        k = random.randint(1, q)

    s = pow(h, k, q)
    p = pow(g, k, q)

    for i in range(0, len(msg)):
        en_msg.append(msg[i])

    for i in range(0, len(en_msg)):
        en_msg[i] = s * ord(en_msg[i])

    return en_msg, p

def client_program():
    host = socket.gethostname()
    port = 5000
    client_socket = socket.socket()
    client_socket.connect((host, port))
    print("Connected to server")

    q = int(client_socket.recv(1024).decode())
    g = int(client_socket.recv(1024).decode())
    h = int(client_socket.recv(1024).decode())

    msg = input("Enter message to encrypt: ")
    en_msg, p = encrypt(msg, q, h, g)
    print("Encrypted Message: ", en_msg)

    client_socket.send(json.dumps(en_msg).encode())
    client_socket.send(str(p).encode())

if __name__=='__main__':
    client_program()
</h5>
<h5>
import socket
import random
import json

a = random.randint(2, 10)

def gcd(a, b):
    if(b==0):
        return a
    return gcd(b,a%b)

def decrypt(en_msg, p, key, q):
    dr_msg = []
    h = pow(p, key, q)
    for i in range(0, len(en_msg)):
        dr_msg.append(chr(int(en_msg[i] / h)))

    return dr_msg

def server_program():
    host = socket.gethostname()
    port = 5000
    server_socket = socket.socket()
    server_socket.bind((host, port))
    server_socket.listen(2)
    print("Server is listening")
    conn, address = server_socket.accept()
    print("Connection from: " + str(address))

    q = int(input("Enter the value of q (a prime no.): "))
    conn.send(str(q).encode())
    g = random.randint(2, q)
    conn.send(str(g).encode())

    key = random.randint(1, q)
    while gcd(q, key) != 1:
        key = random.randint(1, q)
    print("Private Key :", key)

    h = pow(g, key, q)
    conn.send(str(h).encode())

    en_msg = json.loads(conn.recv(1024).decode())
    p = int(conn.recv(1024).decode())

    print("Encrypted Message Received: ", en_msg)
    print("p Received: ", p)

    dr_msg = decrypt(en_msg, p, key, q)
    dmsg = "".join(dr_msg)
    print("Decrypted Message :", dmsg)

if __name__=='__main__':
    server_program()
</h5>
