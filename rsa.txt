<h5>
import socket
import json
import random

def isPrime(n):
    if(n<=1):
        return False
    for i in range(2,int(n**0.5)+1):
        if(n%i==0):
            return False
    return True

def gcd(a, b):
    if(b==0):
        return a
    return gcd(b,a%b)

def client_program():
    host=socket.gethostname()
    port=4000

    client_socket = socket.socket()
    client_socket.connect((host,port))

    p,q=0,0
    bits=10

    while not isPrime(p):
        p = random.getrandbits(bits)
    while not isPrime(q) or p == q:
        q = random.getrandbits(bits)

        

    n=p*q
    phi=(p-1)*(q-1)
    
    e=random.randint(1,phi)
    while gcd(e,phi) != 1:
        e=random.randint(1,phi)

    d=0
    while True:
        if((d*e)%phi==1):
            break
        d+=1
    
    print("Public key : " + str(e))
    print("Value of n : " + str(n))

    client_socket.send(str(e).encode())
    client_socket.send(str(n).encode())

    msg = input("Enter a message: ")
    encrypted_msg = [pow(ord(char), d, n) for char in msg]
    print("Encrypted message: " + str(encrypted_msg))        

    client_socket.send(json.dumps(encrypted_msg).encode())
if __name__ == "__main__":
    client_program()
</h5>
<h5>
import socket
import json
import random

def isPrime(n):
    if(n<=1):
        return False
    for i in range(2,int(n**0.5)+1):
        if(n%1==0):
            return False
    return True

def gcd(a, b):
    if(b==0):
        return a
    return gcd(b,a%b)

def server_program():
    host = socket.gethostname()
    port = 4000

    server_socket = socket.socket()
    server_socket.bind((host,port))
    server_socket.listen(2)
    print("Server started...")
    conn, address = server_socket.accept()
    print("Connection from: " + str(address))
    
    Sen_e = int(conn.recv(1024).decode())
    Sen_n = int(conn.recv(1024).decode())

    print("Public key : " + str(Sen_e))
    print("Value of n : " + str(Sen_n))

    msg = json.loads(conn.recv(1024).decode())
    print("Encrypted message: " + str(msg))

    decrypted_msg = [chr(pow(char, Sen_e, Sen_n)) for char in msg]
    print("Decrypted message: " + "".join(decrypted_msg))

if __name__ == "__main__":
    server_program()
</h5>
